#pragma warning(disable:4996)
#include<iostream>
#include<stdio.h>
#include<stdlib.h>
typedef char elemtype;
typedef struct BitNode{
	elemtype data;
	struct BitNode *lchild, *rchild;
}BitNode,*BiTree;
//创建二叉树,二叉链表结构
void Creat_BiTree(BiTree &T){
	elemtype ch = 0;
	std::cin >> ch; //函数的递归会使得输入出现多次，不需要循环
	if (ch == '#')
			T = NULL;
		else{
			T = (BitNode*)malloc(sizeof(BitNode));  //创建新的结点
			if (!T)
				exit(OVERFLOW);
			T->data = ch;
			Creat_BiTree(T->lchild);
			Creat_BiTree(T->rchild);
	    }
}
//二叉树的前序遍历
void PreOrder(BiTree &T){
	if (T == NULL)
		return;        //若树为空则返回,使得递归结束
	printf("%c", T->data);
	PreOrder(T->lchild);
	PreOrder(T->rchild);
}
//中序遍历
void InOrder(BiTree &T){
	if (T == NULL)
		return;
	InOrder(T->lchild);
	printf("%c", T->data);
	InOrder(T->rchild);
}
void PostOrder(BiTree &T){
	if (T == NULL)
		return;
	PostOrder(T->lchild);
	PostOrder(T->rchild);
	printf("%c", T->data);
}
int main(){
	BiTree T = NULL ;
	Creat_BiTree(T);
    PreOrder(T);
	printf("\n");
	InOrder(T);
	printf("\n");
	PostOrder(T);
	printf("\n");
	return 0;
}
